services:
  auth_test_app:
    container_name: auth-test-app
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: "no"
    env_file:
      - ./.env.test
    environment:
      AUTH_TEST_INTERNAL_PORT: "${AUTH_TEST_INTERNAL_PORT}"
      DATABASE_URL: "postgresql+asyncpg://${AUTH_TEST_DB_USER}:${AUTH_TEST_DB_PASSWORD}@${AUTH_TEST_DB_HOST}:${AUTH_TEST_DB_PORT}/${AUTH_TEST_DB}"
    depends_on:
      auth_test_db:
        condition: service_healthy
      auth_test_redis:
        condition: service_started
    ports:
      - "${AUTH_SERVICE_EXTERNAL_PORT}:${AUTH_SERVICE_INTERNAL_PORT}"
    expose:
      - "${AUTH_SERVICE_INTERNAL_PORT}"
    volumes:
      - ./app:/workdir/app
      - ./migrations:/workdir/migrations
      - ./alembic.ini:/workdir/alembic.ini
      - ./tests:/workdir/tests
      - ./pytest.ini:/workdir/pytest.ini
    networks:
      - auth_test_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
  auth_test_db:
    image: postgres:17.4-alpine
    container_name: auth-test-db
    restart: "no"
    env_file:
      - ../.env.test
    environment:
      POSTGRES_USER: ${AUTH_TEST_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_TEST_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_TEST_DB}
      TZ: ${TIME_ZONE}
      PGTZ: ${TIME_ZONE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_TEST_DB_USER} -d ${AUTH_TEST_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    expose:
      - "5432"
    networks:
      - auth_test_network
  auth_test_redis:
    image: redis:7.4.2-alpine 
    container_name: auth-test-redis
    restart: "no"
    env_file:
      - ../.env
      - ./.env
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - auth_redis_data:/data
    networks:
      - auth_test_network
    command: redis-server --appendonly yes

networks:
  auth_test_network:
    name: ${AUTH_TEST_NETWORK}
    driver: bridge